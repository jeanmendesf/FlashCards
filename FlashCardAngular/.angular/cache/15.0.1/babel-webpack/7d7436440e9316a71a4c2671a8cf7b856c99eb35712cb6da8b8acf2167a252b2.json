{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nlet FlashCardsComponent = class FlashCardsComponent {\n  constructor(flashCardService, modalService) {\n    this.flashCardService = flashCardService;\n    this.modalService = modalService;\n    this.respostaVisivel = false;\n    this.loginVisivel = true;\n    this.visibilidadeTabela = false;\n    this.visibilidadeFormulario = false;\n  }\n  ngOnInit() {\n    this.flashCardService.ObterTodosFlashCard().subscribe(resultado => {\n      this.flashCards = resultado;\n    });\n  }\n  ExibirFormularioCadastro() {\n    this.visibilidadeTabela = false;\n    this.visibilidadeFormulario = true;\n    this.tituloFormulario = \"Novo FlashCard\";\n    this.formulario = new FormGroup({\n      usuarioId: new FormControl(1),\n      nome: new FormControl(null),\n      pergunta: new FormControl(null),\n      resposta: new FormControl(null)\n    });\n  }\n  ExibirFormularioAtualizacao(flashCardId) {\n    this.visibilidadeTabela = false;\n    this.visibilidadeFormulario = true;\n    this.flashCardService.ObterPorIdFlashCard(1, flashCardId).subscribe(resultado => {\n      this.tituloFormulario = \"Atualizar FlashCard\";\n      this.formulario = new FormGroup({\n        id: new FormControl(resultado.id),\n        usuarioId: new FormControl(1),\n        nome: new FormControl(resultado.nome),\n        pergunta: new FormControl(resultado.pergunta),\n        resposta: new FormControl(resultado.resposta)\n      });\n    });\n  }\n  Voltar() {\n    this.visibilidadeTabela = true;\n    this.visibilidadeFormulario = false;\n  }\n  ExibirResposta(flashCardResposta, respostaModal) {\n    this.modalRef = this.modalService.show(respostaModal);\n    this.flashCardResposta = flashCardResposta;\n  }\n  ExibirConfirmacaoExclusao(flashCardId, conteudoModal) {\n    this.modalRef = this.modalService.show(conteudoModal);\n    this.flashCardId = flashCardId;\n  }\n  DeletarFlashCard(flashCardId) {\n    this.flashCardService.DeletarFlashCard(1, flashCardId).subscribe(resultado => {\n      this.modalRef.hide();\n      alert('FlashCard excluido com sucesso!');\n      this.flashCardService.ObterTodosFlashCard().subscribe(registros => {\n        this.flashCards = registros;\n      });\n    });\n  }\n  EnviarFormularioFlashCard() {\n    const flashCard = this.formulario.value;\n    if (flashCard.id > 0) {\n      this.flashCardService.AtualizarFlashCard(flashCard).subscribe(resultado => {\n        this.visibilidadeFormulario = false;\n        this.visibilidadeTabela = true;\n        alert('FlashCard atualizado com sucesso!');\n        this.flashCardService.ObterTodosFlashCard().subscribe(registros => {\n          this.flashCards = registros;\n        });\n      });\n    } else {\n      this.flashCardService.AdicionarFlashCard(flashCard).subscribe(resultado => {\n        this.visibilidadeFormulario = false;\n        this.visibilidadeTabela = true;\n        alert('FlashCard gravado com sucesso!');\n        this.flashCardService.ObterTodosFlashCard().subscribe(registros => {\n          this.flashCards = registros;\n        });\n      });\n    }\n  }\n};\nFlashCardsComponent = __decorate([Component({\n  selector: 'app-flash-cards',\n  templateUrl: './flash-cards.component.html',\n  styleUrls: ['./flash-cards.component.css']\n})], FlashCardsComponent);\nexport { FlashCardsComponent };","map":{"version":3,"mappings":"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","names":["Component","FormControl","FormGroup","FlashCardsComponent","constructor","flashCardService","modalService","ngOnInit","ObterTodosFlashCard","subscribe","resultado","flashCards","ExibirFormularioCadastro","visibilidadeTabela","visibilidadeFormulario","tituloFormulario","formulario","usuarioId","nome","pergunta","resposta","ExibirFormularioAtualizacao","flashCardId","ObterPorIdFlashCard","id","Voltar","ExibirResposta","flashCardResposta","respostaModal","modalRef","show","ExibirConfirmacaoExclusao","conteudoModal","DeletarFlashCard","hide","alert","registros","EnviarFormularioFlashCard","flashCard","value","AtualizarFlashCard","AdicionarFlashCard","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\jeanm\\Documents\\FlashCard\\FlashCardAngular\\src\\app\\components\\flash-cards\\flash-cards.component.ts"],"sourcesContent":["import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { FlashCardsService } from 'src/app/flash-cards.service';\nimport { FlashCard } from 'src/app/FlashCard';\n\n@Component({\n  selector: 'app-flash-cards',\n  templateUrl: './flash-cards.component.html',\n  styleUrls: ['./flash-cards.component.css']\n})\nexport class FlashCardsComponent implements OnInit {  \n  formulario: any;\n  tituloFormulario!: string;\n  \n  flashCards!: FlashCard[];\n  flashCardId!:number;\n  flashCardResposta! : string;\n\n  visibilidadeResposta!: string;\n  respostaVisivel:boolean = false;\n  \n  loginVisivel: boolean = true;\n  visibilidadeTabela : boolean = false;\n  visibilidadeFormulario : boolean = false;\n\n  modalRef!:BsModalRef;\n\n  constructor(private flashCardService : FlashCardsService, \n              private modalService     : BsModalService){}\n\n  ngOnInit(): void {\n    this.flashCardService.ObterTodosFlashCard().subscribe(resultado =>{\n      this.flashCards = resultado;\n    });\n       \n  }\n\n\n\n  ExibirFormularioCadastro():void{\n    this.visibilidadeTabela = false;\n    this.visibilidadeFormulario = true;\n    this.tituloFormulario = \"Novo FlashCard\";\n    this.formulario = new FormGroup({\n      usuarioId : new FormControl(1),\n      nome      : new FormControl(null),\n      pergunta  : new FormControl(null),\n      resposta  : new FormControl(null)\n    });\n  }\n\n  ExibirFormularioAtualizacao(flashCardId:number):void{\n    this.visibilidadeTabela = false;\n    this.visibilidadeFormulario = true;\n\n    this.flashCardService.ObterPorIdFlashCard(1,flashCardId).subscribe((resultado) =>{\n      this.tituloFormulario = \"Atualizar FlashCard\";\n\n      this.formulario = new FormGroup({\n        id        : new FormControl(resultado.id),\n        usuarioId : new FormControl(1),\n        nome      : new FormControl(resultado.nome),\n        pergunta  : new FormControl(resultado.pergunta),\n        resposta  : new FormControl(resultado.resposta)\n      });\n    });\n  }\n\n  Voltar():void{\n    this.visibilidadeTabela = true;\n    this.visibilidadeFormulario=false;\n  }\n\n  ExibirResposta(flashCardResposta:string, respostaModal: TemplateRef<any>): void{\n    this.modalRef = this.modalService.show(respostaModal);\n    this.flashCardResposta = flashCardResposta;    \n  }\n\n  ExibirConfirmacaoExclusao(flashCardId: number, conteudoModal: TemplateRef<any>): void{\n    this.modalRef = this.modalService.show(conteudoModal);\n    this.flashCardId = flashCardId;    \n  }\n\n  DeletarFlashCard(flashCardId:number){\n    this.flashCardService.DeletarFlashCard(1, flashCardId).subscribe(resultado =>{\n      this.modalRef.hide();\n      alert('FlashCard excluido com sucesso!');\n      this.flashCardService.ObterTodosFlashCard().subscribe(registros=>{\n        this.flashCards= registros;\n      });\n    });\n  }\n\n  EnviarFormularioFlashCard(): void{\n    const flashCard : FlashCard = this.formulario.value;\n\n    if (flashCard.id > 0){\n      this.flashCardService.AtualizarFlashCard(flashCard).subscribe(resultado =>{\n        this.visibilidadeFormulario = false;\n        this.visibilidadeTabela=true;\n        alert('FlashCard atualizado com sucesso!');\n        this.flashCardService.ObterTodosFlashCard().subscribe(registros=>{\n          this.flashCards = registros;\n        });\n      })\n    }else{\n      this.flashCardService.AdicionarFlashCard(flashCard).subscribe((resultado)=>{\n        this.visibilidadeFormulario = false;\n        this.visibilidadeTabela=true;\n        alert('FlashCard gravado com sucesso!');\n        this.flashCardService.ObterTodosFlashCard().subscribe(registros=>{\n          this.flashCards = registros;\n        })\n      })\n  }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}